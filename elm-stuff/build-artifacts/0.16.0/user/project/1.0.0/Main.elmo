Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: "100%"}
                                               ,{ctor: "_Tuple2",_0: "height",_1: "40px"}
                                               ,{ctor: "_Tuple2",_0: "padding",_1: "10px 0"}
                                               ,{ctor: "_Tuple2",_0: "font-size",_1: "2em"}
                                               ,{ctor: "_Tuple2",_0: "text-align",_1: "center"}]));
   var update = F2(function (newStr,oldStr) {    return newStr;});
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.input,
              _U.list([$Html$Attributes.placeholder("Reverse the text")
                      ,$Html$Attributes.value(model)
                      ,A3($Html$Events.on,"input",$Html$Events.targetValue,$Signal.message(address))
                      ,styles]),
              _U.list([]))
              ,A2($Html.div,_U.list([styles]),_U.list([$Html.text($String.reverse(model))]))]));
   });
   var main = $StartApp$Simple.start({model: "",view: view,update: update});
   return _elm.Main.values = {_op: _op,main: main,view: view,update: update,styles: styles};
};